services:
  minio:
    image: quay.io/minio/minio:latest
    container_name: betedge-minio
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Web UI
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - betedge-network

  mc:
    image: minio/mc:latest
    container_name: betedge-mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 minioadmin minioadmin123;
      mc mb minio/betedge-data --ignore-existing;
      mc policy set public minio/betedge-data;
      echo 'MinIO setup complete - bucket: betedge-data';
      exit 0;
      "
    networks:
      - betedge-network

  application:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: betedge-data
    depends_on:
      minio:
        condition: service_healthy
    ports:
      - "8000:8000"
      - "25510:25510"
    environment:
      # MinIO Configuration
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_BUCKET: betedge-data
      MINIO_SECURE: "false"
      MINIO_REGION: us-east-1
      # ThetaTerminal Configuration  
      THETA_BASE_URL: "http://172.18.0.1:25510/v2"
      # Application Configuration
      FORCE_REFRESH: "false"
    env_file:
      - .env
    volumes:
      - ./ThetaTerminal.jar:/app/ThetaTerminal.jar:ro
      - theta-data:/home/betedge/.theta
    networks:
      - betedge-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  betedge-network:
    driver: bridge

volumes:
  minio-data:
  theta-data: